urls.py - navbar.html - context_processors.py - models.py - views.py - album_detail.html

1. navbar.html 에서 12~14줄
만들어진 links 가 있음. 데이터가 들어있다. 
get_absolute_url 로 정의된 데이터 덩어리를 cat 에다가 하나씩 뺀다.
그럼 links는 어디에 걸려있는걸까.
insta 안에 context_processors.py에 def menu_links 안에
links 가 Album 에 걸려있다
그럼 이제 insta - models.py 에 모델을 확인해보면?
class Album 하위 def get_absolute_url 이라고 정의가 되어진게 있다.
안에 내용을 보자면 insta:album_detail 이라는 url을 따라가게 되어있다.
class Album 의 id값을 가지고.!
--------------------------------------------------------------------------------------------
그럼이제 다시 insta app의 urls.py 에서 album_detail 이 뭐라 표시되어있는지 찾는다.
path가 걸려있다.
    path('photo/<int:pk>/', views.AlbumDV.as_view(), name='album_detail'),


근데 지금 이해가 안되는 부분이,
위에 저렇게 설정해서 카테고리에 id 로 추적해서 그 id의 name 이 추출되어 보이는 네비바
근데 그 네비바를 누르면? templates - insta - album_detail.html 로 연결된다.

이 부분이 이해 해야되는 부분,
 
 =====================================================================
 
 navbar.html 에서 links 라는거에 데이터가 들어있음.
 왜
 context_processors.py에 links 가 
 models.py에 class Album의 all 오브젝트라고 설정을 해놓음.
 cat 이라고 만든거에 링크스에서 하나씩 빠져나오는 {} 실행
 거기서 name 을 추출해서 보이는거고,
 href 로 하이퍼링크를 걸어준다.
+++++++++++++++++++++++++++++
 get_absolute_url  = album 에서 뭐라되어있는지 본다.
         return reverse('insta:album_detail', args = [self.id])
이렇게 걸려있고.
urls.py 로 가서 어떻게 표시되는가 확인한다.
    path('photo/<int:pk>/', views.AlbumDV.as_view(), name='album_detail'),
네임이 앨범_디테일로 되어있는거가 보니까 
주소는 저렇게 보여지게 하겠다. photo/pk로 설정되어있는 id값
views. 안에 저기 지정해준 함수를 실행하겠다.
이제 저 앨범 디테일에 가보자.
조또 아무것도 없음 걍
모델 앨범에 연결되어있음.











 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
